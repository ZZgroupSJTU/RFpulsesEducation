function showMagnetizationWithSeqblock_Dynamic(Mt,seqblock,params)
%%
%   Mt: 3D matrix with a size of number_of_spins * 3 (Mx,My,Mz) * Nt (Dynamic)
%   seqblock: sequence seqblock generated by function Generate_seqseqblock.m or combineseqblocks.m
%   params:Animation setting

%   Code made available for the ISMRM 2022 Educational Course
% 
%   Zhiyong Zhang (zhiyong.zhang@sjtu.edu.cn)
%% Default Animation setting and updated with input params
paramsDefault.SaveFormat=[];             % []-->no saving
                                         % 'mp4'--> save as mp4 file
                                         % 'gif'--> save as gif file
paramsDefault.viewSeqblock=true;         % whether to show the sequence with 1 subplots
paramsDefault.viewTrace=true;            % whether plot the trace(s) during the magnetization evolution(s)
paramsDefault.LastKeep=2;                % [Keep the last moment for serveral seconds]
paramsDefault.filepath=pwd;              % define whether to save the file
paramsDefault.filename='SeqM_Dynamic';   % define the name of the file
paramsDefault.FrameRate=30;              % define the framerate of the movie or gif
paramsDefault.view3D=[-255,10];          % Default 3D view angles

% The following is to define the colors for the visualization
paramsDefault.BGColor='k';
if nargin>2
    params = UpdateParams(paramsDefault, params, true);
else
    params=paramsDefault;
end

graycolor=gray(64);
switch params.BGColor
    case 'k'
        params.Seqblock_baseLineColor=[0.5 0.5 0.5];
        params.Seqblock_LineColor='w';
        params.Seqblock_BGColor=graycolor(4:7,:);
    case 'w'
        params.Seqblock_baseLineColor=[0.5 0.5 0.5];
        params.Seqblock_LineColor='k';
        params.Seqblock_BGColor=graycolor(57:60,:);
    otherwise
        warning('please make sure set the Seqblock_baseLineColor,Seqblock_LineColor,Seqblock_BGColor')
end
%% show the sequence seqblock plot as a fixed background for dynamic plot
set(gcf, 'color', params.BGColor);
if params.viewSeqblock
    t=seqblock.t;
    B1amp=3*seqblock.B1amp/max(abs(seqblock.B1amp(:)+eps));
    B1phase=3*seqblock.B1phase/max(abs(seqblock.B1phase(:)+eps));
    Gx=3*seqblock.Gx/max(abs(seqblock.Gx(:)+eps));
    Gy=3*seqblock.Gy/max(abs(seqblock.Gy(:)+eps));
    Gz=3*seqblock.Gz/max(abs(seqblock.Gz(:)+eps));

    axes1=subplot(121);
    cmap=params.Seqblock_BGColor;
    rectangle(axes1,'Position',[0,0,20,8],'FaceColor',cmap(1,:),'EdgeColor','none', 'Tag','Gzbox');
    rectangle(axes1,'Position',[0,8,20,8],'FaceColor',cmap(2,:),'EdgeColor','none', 'Tag','Gybox');
    rectangle(axes1,'Position',[0,16,20,8],'FaceColor',cmap(3,:),'EdgeColor','none','Tag','Gxbox');
    rectangle(axes1,'Position',[0,24,20,16],'FaceColor',cmap(4,:),'EdgeColor','none','Tag','RFbox');

    N=length(t);
    line(axes1,t,4*ones(1,N), 'LineWidth',2,  'Color',params.Seqblock_baseLineColor,'LineStyle',':' ,'Tag','LineGz0');
    line(axes1,t,12*ones(1,N), 'LineWidth',2,  'Color',params.Seqblock_baseLineColor,'LineStyle',':' ,'Tag','LineGy0');
    line(axes1,t,20*ones(1,N), 'LineWidth',2,  'Color',params.Seqblock_baseLineColor,'LineStyle',':' ,'Tag','LineGx0');
    line(axes1,t,28*ones(1,N), 'LineWidth',2,  'Color',params.Seqblock_baseLineColor,'LineStyle',':' , 'Tag','RFphase0');
    line(axes1,t,32*ones(1,N), 'LineWidth',2,  'Color',params.Seqblock_baseLineColor,'LineStyle',':' , 'Tag','RFamp0');

    line(axes1,t,Gz+4,'LineWidth',2, 'Color',params.Seqblock_LineColor,'Tag','LineGz');
    line(axes1,t,12+Gy,'LineWidth',2,  'Color',params.Seqblock_LineColor, 'Tag','LineGy');
    line(axes1,t,20+Gx,'LineWidth',2, 'Color',params.Seqblock_LineColor, 'Tag','LineGx');
    line(axes1,t,28+B1phase,'LineWidth',2,  'Color',params.Seqblock_LineColor,'Tag','LineB1phase');
    line(axes1,t,32+2*B1amp,'LineWidth',2, 'Color',params.Seqblock_LineColor, 'Tag','LineB1amp');
    axis([0,t(end),0,40]);
    set(axes1,'XTick',linspace(0,t(end),3),'FontSize',12,'FontWeight','bold','XColor',params.Seqblock_LineColor);
    set(axes1,'xticklabels',{num2str(0),[num2str(t(end)/2*1e3),' ms'], [num2str(t(end)*1e3),' ms']});
    set(axes1,'YTick',[4 12 20 28 32],'FontSize',12,'FontWeight','bold','YColor',params.Seqblock_LineColor);
    set(axes1,'yticklabels',{'G_z','G_y','G_x','RFphase','RFamp'});
    axes1.XAxis.LineWidth=0.001;
    axes1.YAxis.LineWidth=0.001;
end
%% Create a sphere background and show as a fixed background for dynamic plot
if params.viewSeqblock
    axes2=subplot(122);
    set(axes2,'position',[0.5 0.05,0.5,0.9]);
else
    axes2=gca;
    set(axes2,'position',[0.05 0.05,0.9,0.9]);
end
set(axes2, 'color', params.BGColor);

hold on;
r = 1;                  %radius
d = [-r,r]';
t=0:0.001:(2*pi);       % circle
t=t';
x = [zeros(size(t)), r*cos(t), r*sin(t)];  
y = [r*cos(t), zeros(size(t)), r*cos(t)]; 
z = [r*sin(t), r*sin(t), zeros(size(t))];  
x0=[zeros(size(d)), d, zeros(size(d))];    
y0=[ zeros(size(d)), zeros(size(d)), d];
z0=[d, zeros(size(d)), zeros(size(d))];
plot3(x(:,1),y(:,1),z(:,1),':',x(:,2),y(:,2),z(:,2),':',x(:,3),y(:,3),z(:,3),':','color',[0.5 0.5 0.5],'linewidth',2);
plot3(x0(:,1),y0(:,1),z0(:,1),'b',x0(:,2),y0(:,2),z0(:,2),'g',x0(:,3),y0(:,3),z0(:,3),'c','linewidth',2);

view(3)
axis([-1 1 -1 1 -1 1]*r);
axis off;
view(paramsDefault.view3D);

%% show the magnetization dynamics
Nt=size(Mt,3);
Nspins=size(Mt,1);
hold on;
cspins = spring(Nspins);   % create a colormap for many spins' dynamics
if params.viewTrace
    h=zeros(1,Nspins);         % For the animatedline handle indicators of the tracing of the spin pathways.
    linetrace=cell(1,Nspins);  % Init the animatedline handles for all the spins
    for spin_idx=1:Nspins
        linetrace{spin_idx} = animatedline(axes2,'linewidth', 0.5,'color',cspins(spin_idx,:),'linestyle',':');           % Init Animated Line
    end
end

if strcmp(params.SaveFormat,'mp4')
    mp4name=fullfile(params.filepath,[params.filename,'.mp4']);
    writerObj=VideoWriter(mp4name,'MPEG-4');
    writerObj.FrameRate=params.FrameRate;
    open(writerObj);
end
            
for t_idx=1:Nt             % Start the dynamic plot loop
    if t_idx>1
       delete(h);          % remove the previous Animated Lines in the spin dynamic plot
       if params.viewSeqblock
          delete(htline);     % remove the previous moment line in the sequence seqblock plot
       end
    end
    
    if params.viewSeqblock
        set(gcf,'CurrentAxes',axes1);         
        hold on;               % moment line plot (t line) in the sequence seqblock plot
        htline=line([seqblock.t(t_idx),seqblock.t(t_idx)],[0 42], 'LineWidth',1,  'Color','r' ); 
    end
    set(gcf,'CurrentAxes',axes2);
    hold on;
    for spin_idx=1:Nspins
        x_cur=Mt(spin_idx,1,t_idx);
        y_cur=Mt(spin_idx,2,t_idx);
        z_cur=Mt(spin_idx,3,t_idx);
        if params.viewTrace
            addpoints(linetrace{spin_idx},x_cur,y_cur,z_cur);                  % - add to animated line
        end
        h(spin_idx)=farrow(0,0,0,x_cur,y_cur,z_cur,cspins(spin_idx,:),2);
    end
    
    switch params.SaveFormat
        case 'none'
            pause(0.01);
        case 'gif'
            gifname=fullfile(params.filepath,[params.filename,'.gif']);
            frame=getframe(gcf);
            im = frame2im(frame); 
            [imind,cm] = rgb2ind(im,256); 
            % Write to the GIF File 
            if t_idx == 1 
               imwrite(imind,cm,gifname,'gif','DelayTime',1/params.FrameRate, 'Loopcount',inf); 
            elseif t_idx==Nt
               for m=1:max(1,round(params.LastKeep/params.FrameRate))
                   imwrite(imind,cm,gifname,'gif','DelayTime',1/params.FrameRate,'WriteMode','append');
               end
            else
               imwrite(imind,cm,gifname,'gif','DelayTime',1/params.FrameRate,'WriteMode','append'); 
            end 
        case 'mp4'
            if t_idx==Nt
                for m=1:max(1,round(params.LastKeep/params.FrameRate))
                    frame=getframe(gcf);
                    writeVideo(writerObj,frame);
                end
            else
               frame=getframe(gcf);
               writeVideo(writerObj,frame);
            end
    end
end
if strcmp(params.SaveFormat,'mp4')
    close(writerObj);
end

