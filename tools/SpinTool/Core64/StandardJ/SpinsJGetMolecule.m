function [isValidMetName, name, abbrev, concHuman] = SpinsJGetMolecule(metName)
% Obtains molecule name, abbreviation and default concentrations
%   SpinsJGetMolecule   Prints a list of all available metabolite names
%
%   isValidName = SpinsJGetMolecule(metName) Returns true if metName is
%   a valid name this function recognizes, false otherwise.
%
%   [isValidName, name, abbrev, concHuman] = SpinsJGetMolecule(metName)
%   Also returns the full name, abbreviation and default concentration 
%   of the molecule in the human brain. 
%
%   See also: SpinsJAddMolecule, InitSpinsJ


%                 User-input name                        Molecule Name                    Abbreviated name    Human Concentration (mM)
moleculeTable = {{'acetate', 'ace'},                     'Acetate',                       'Ace',              0.2; ...
                 {'naa'},                                'n-Acetyl-Aspartate',            'NAA',              10; ...
                 {'naa singlet'},                        'n-Acetyl-Aspartate',            'NAA (CH3)',        10; ...
                 {'naag'},                               'n-Acetyl-Aspartate-Glutamate',  'NAAG',             1; ...
                 {'atp'},                                'ATP',                           'ATP',              3; ...
                 {'ala', 'alanine'},                     'Alanine',                       'Ala',              0.5; ...
                 {'ascorbic acid', 'asc'},               'Ascorbic Acid',                 'Asc',              1; ...
                 {'asp', 'aspartate'},                   'Aspartate',                     'Asp',              1.5; ...
                 {'ch', 'cho'},                          'Choline',                       'Ch',               1.0; ...
                 {'cho singlet'},                        'Total Choline (3CH3)',          'Ch (3CH3)',        1.0; ...
                 {'cr', 'creatine'},                     'Creatine',                      'Cr',               6; ...
                 {'cr singlet'},                         'Creatine (CH3)',                'Cr (CH3)',         6; ...
                 {'eth', 'ethanol'},                     'Ethanol',                       'Eth',              0.5; ...
                 {'methanol'},                           'Methanol',                      'Mth',              0.5; ...
                 {'ethanolamine', 'eta'},                'Ethanolamine',                  'ETA',              0.5;
                 {'gaba'},                               'Gamma Aminobutyric Acid',       'GABA',             1.5; ...
                 {'glucose', 'glc'},                     'Glucose',                       'Glc',              1.5; ...
                 {'glucose alpha', 'glc-alpha'},         'Glucose (Alpha)',               'Glc (Alpha)',      1.5*0.36; ...
                 {'glucose beta', 'glc beta'},           'Glucose (Beta)',                'Glc (Beta)',       1.5*0.64; ...
                 {'glutamate', 'glu'},                   'Glutamate',                     'Glu',              9; ...
                 {'glutamine', 'gln'},                   'Glutamine',                     'Gln',              4; ...
                 {'gsh', 'glutathione'},                 'Glutathione',                   'GSH',              2; ...
                 {'gsh-glu', 'glutathione-glu'},         'Glutathione (Glu Moeity)',      'GSH-Glu',          2; ...
                 {'gsh-gly', 'glutathione-gly'},         'Glutathione (Gly Moeity)',      'GSH-Gly',          2; ...
                 {'gsh-cys', 'glutathione-cys'},         'Glutathione (Cys Moeity)',      'GSH-Cys',          2; ...
                 {'gpc', 'glycerophosphocholine'},       'Glycerophosphocholine',         'GPC',              1; ...
                 {'gly', 'glycine'},                     'Glycine',                       'Gly',              0.6; ...
                 {'mi', 'myo-inositol'},                 'myo-Inositol',                  'mI',               6; ...
                 {'si', 'scyllo-inositol'},              'scyllo-Inositol',               'sI',               0.3; ...
                 {'lac', 'lactate'},                     'Lactate',                       'Lac',              0.2; ...
                 {'phosphocreatine', 'pcr'},             'Phosphocreatine',               'PCr',              4; ...
                 {'phosphoethanolamine', 'pe'},          'Phosphoethanolamine',           'PE',               1; ...
                 {'phosphorylcholine', 'pcho', 'pch'},   'Phosphorylcholine',             'PCh',              0.4; ...
                 {'pyr', 'pyruvate'},                    'Pyruvate',                      'Pyr',              0.2; ...
                 {'suc', 'succinate'},                   'Succinate',                     'Suc',              0.2; ...
                 {'tau', 'taurine'},                     'Taurine',                       'Tau',              4; ...
                 {'spin half'},                          'Spin Half',                     'Spin Half',        1; ...
                 {'simple j'},                           'Simple J',                      'Simple J',         1; ...
                 {'water'},                              'Water',                         'H2O',              1000; ...
                 {'dss'},                                'DSS',                           'DSS',              10};

numMolecules = size(moleculeTable, 1);

if nargin==0
    % List all possible molecule input names
    fprintf('Possible molecule names:\n\n');
    t = cell2table(moleculeTable);
    for idx=1:size(t,1)
        x = t{idx,1}{1};
        numInputs = numel(x);
        inputStr = '';
        for idxInp=1:numInputs-1
            inputStr = [inputStr, x{idxInp},', '];
        end
        inputStr = [inputStr, x{numInputs}];
        t{idx,1}{1} = inputStr;
    end
    t.Properties.VariableNames = {'Input', 'Molecule', 'Abbrev', 'DefaultConc'};
    disp(t);
    return;
end

% See if input metName is a valid input
isValidMetName = false;
for idx=1:numMolecules
    if any(strcmpi(moleculeTable{idx,1}, metName))
        isValidMetName = true;
        name = moleculeTable{idx, 2};
        abbrev = moleculeTable{idx, 3};
        concHuman = moleculeTable{idx, 4};
    end
end
if ~isValidMetName
    error('Metabolite name %s is not valid. Run SpinsJGetMolecule to see a list of valid options.', metName);
end

